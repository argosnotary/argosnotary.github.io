(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{100:function(e,r,t){"use strict";t.d(r,"a",(function(){return d})),t.d(r,"b",(function(){return f}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var r=o.a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},d=function(e){var r=u(e.components);return o.a.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},m=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=n,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return t?o.a.createElement(f,c(c({ref:r},s),{},{components:t})):o.a.createElement(f,c({ref:r},s))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return l})),t.d(r,"default",(function(){return u}));var n=t(2),o=t(6),a=(t(0),t(100)),i={id:"20_recover",title:"Recover Admin Role",sidebar_label:"Recover Admin"},c={unversionedId:"40_administration/20_recover",id:"40_administration/20_recover",isDocsHomePage:!1,title:"Recover Admin Role",description:"Recover the Administrator Role",source:"@site/docs/40_administration/20_recover.md",slug:"/40_administration/20_recover",permalink:"/docs/40_administration/20_recover",editUrl:"https://github.com/argosnotary/docs/tree/master/docs/40_administration/20_recover.md",version:"current",sidebar_label:"Recover Admin",sidebar:"docs",previous:{title:"wip",permalink:"/docs/40_administration/10_maintenance"},next:{title:"Authentication",permalink:"/docs/50_security/10_authentication"}},l=[{value:"Recover the Administrator Role",id:"recover-the-administrator-role",children:[]}],s={rightToc:l};function u(e){var r=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},s,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"recover-the-administrator-role"},"Recover the Administrator Role"),Object(a.b)("p",null,"Although the chances are small there are some scenario's that all Administrator roles in Argos Notary are lost. In this case follow these instructions."),Object(a.b)("p",null,"To force an account to administrator you logon to the mongo db shell and run this script (change the email address to the account you want to be administrator):"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'db.getCollection("roles").find(\n    {\n        "name" : "administrator"\n    }\n).projection({ roleId: 1, _id: 0 })\n.forEach(function(role) {\n    print( "role: " + role.roleId );\n       db.personalaccounts.findOneAndUpdate({ "email": "luke@skywalker.imp" },{ $set: { "roleIds" :[ role.roleId]} });\n});\n')))}u.isMDXComponent=!0}}]);